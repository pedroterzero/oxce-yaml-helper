items:
  ######### many tests follow to test whether typeLinks are correct and working ##

  - type: STR_ITEM_CATEGORY_TEST
    categories:
      - STR_ITEM_CATEGORY_REPLACEBY_TEST
  # missing type (disabled because we're already checking it)
  # - type: STR_ITEM_CATEGORY_TEST_MISSING
  #   categories:
  #     - STR_DUMMY_NON_EXISTING_REFERENCE
  # incorrect type (disabled because we're already checking it)
  # - type: STR_ITEM_CATEGORY_TEST_INCORRECT
  #   categories:
  #     - STR_DUMMY_RESEARCH

  - type: STR_ITEM_COMPATIBLE_AMMO_TEST
    compatibleAmmo:
      - STR_DUMMY_ITEM
  # missing type
  - type: STR_ITEM_COMPATIBLE_AMMO_TEST_MISSING
    compatibleAmmo:
      - STR_DUMMY_NON_EXISTING_REFERENCE
  # incorrect type
  - type: STR_ITEM_COMPATIBLE_AMMO_TEST_INCORRECT
    compatibleAmmo:
      - STR_DUMMY_RESEARCH

  - type: STR_ITEM_AMMO_COMPATIBLE_AMMO_TEST
    ammo:
      0:
        compatibleAmmo:
          - STR_DUMMY_ITEM
  # missing type
  - type: STR_ITEM_AMMO_COMPATIBLE_AMMO_TEST_MISSING
    ammo:
      0:
        compatibleAmmo:
          - STR_DUMMY_NON_EXISTING_REFERENCE
  # incorrect type
  - type: STR_ITEM_AMMO_COMPATIBLE_AMMO_TEST_INCORRECT
    ammo:
      0:
        compatibleAmmo:
          - STR_DUMMY_RESEARCH

  - type: STR_ITEM_DEFAULT_INVENTORY_SLOT_TEST
    defaultInventorySlot: STR_BACK_PACK
  # missing type
  - type: STR_ITEM_DEFAULT_INVENTORY_SLOT_TEST_MISSING
    defaultInventorySlot: STR_DUMMY_NON_EXISTING_REFERENCE
  # incorrect type
  - type: STR_ITEM_DEFAULT_INVENTORY_SLOT_TEST_INCORRECT
    defaultInventorySlot: STR_DUMMY_ITEM

  - type: STR_ITEM_REQUIRES_TEST
    requires:
      - STR_DUMMY_RESEARCH
  # missing type
  - type: STR_ITEM_REQUIRES_TEST_MISSING
    requires: [STR_DUMMY_NON_EXISTING_REFERENCE]
  # incorrect type
  - type: STR_ITEM_REQUIRES_TEST_INCORRECT
    requires: [STR_DUMMY_ITEM]

  - type: STR_ITEM_REQUIRES_BUY_TEST
    requiresBuy: [STR_DUMMY_RESEARCH]
  # missing type
  - type: STR_ITEM_REQUIRES_BUY_TEST_MISSING
    requiresBuy: [STR_DUMMY_NON_EXISTING_REFERENCE]
  # incorrect type
  - type: STR_ITEM_REQUIRES_BUY_TEST_INCORRECT
    requiresBuy: [STR_DUMMY_ITEM]

  - type: STR_ITEM_REQUIRES_BUY_BASE_FUNC_TEST
    requiresBuyBaseFunc: [ STR_DUMMY_BASE_FUNC ]
  # missing type
  - type: STR_ITEM_REQUIRES_BUY_BASE_FUNC_TEST_MISSING
    requiresBuyBaseFunc: [ STR_DUMMY_NON_EXISTING_REFERENCE ]
  # incorrect type
  - type: STR_ITEM_REQUIRES_BUY_BASE_FUNC_TEST_INCORRECT
    requiresBuyBaseFunc: [ STR_DUMMY_ITEM ]

  - type: STR_ITEM_SPAWN_UNIT_TEST
    spawnUnit: STR_DUMMY_UNIT1
  # missing type
  - type: STR_ITEM_SPAWN_UNIT_TEST_MISSING
    spawnUnit: STR_DUMMY_NON_EXISTING_REFERENCE
  # incorrect type
  - type: STR_ITEM_SPAWN_UNIT_TEST_INCORRECT
    spawnUnit: STR_DUMMY_RESEARCH

  - type: STR_ITEM_SUPPORTED_INVENTORY_SECTIONS_TEST
    supportedInventorySections: [ STR_BACK_PACK ]
  # missing type
  - type: STR_ITEM_SUPPORTED_INVENTORY_SECTIONS_TEST_MISSING
    supportedInventorySections: [ STR_DUMMY_NON_EXISTING_REFERENCE ]
  # incorrect type
  - type: STR_ITEM_SUPPORTED_INVENTORY_SECTIONS_TEST_INCORRECT
    supportedInventorySections: [ STR_DUMMY_ITEM ]

  - type: STR_ITEM_RULE_ITEM_TAGS_TEST
    tags: {TAG_TEST: 1}
  # missing type
  - type: STR_ITEM_RULE_ITEM_TAGS_TEST_MISSING
    tags: {TAG_NON_EXISTING: 1}
  # incorrect type
  - type: STR_ITEM_RULE_ITEM_TAGS_TEST_INCORRECT
    tags: {STR_ITEM_RULE_ITEM_TAGS_TEST: 1}

  - type: STR_ITEM_ZOMBIE_UNIT_TEST
    zombieUnit: STR_DUMMY_UNIT1
  # missing type
  - type: STR_ITEM_ZOMBIE_UNIT_TEST_MISSING
    zombieUnit: STR_DUMMY_NON_EXISTING_REFERENCE
  # incorrect type
  - type: STR_ITEM_ZOMBIE_UNIT_TEST_INCORRECT
    zombieUnit: STR_DUMMY_RESEARCH

  - type: STR_ITEM_ZOMBIE_UNIT_BY_ARMOR_FEMALE_TEST
    zombieUnitByArmorFemale:
      STR_DUMMY_ARMOR: STR_DUMMY_UNIT1
  # missing type
  - type: STR_ITEM_ZOMBIE_UNIT_BY_ARMOR_FEMALE_TEST_MISSING_KEY
    zombieUnitByArmorFemale:
      STR_DUMMY_NON_EXISTING_REFERENCE: STR_DUMMY_UNIT1
  - type: STR_ITEM_ZOMBIE_UNIT_BY_ARMOR_FEMALE_TEST_MISSING_VALUE
    zombieUnitByArmorFemale:
      STR_DUMMY_ARMOR: STR_DUMMY_NON_EXISTING_REFERENCE
  # incorrect type
  - type: STR_ITEM_ZOMBIE_UNIT_BY_ARMOR_FEMALE_TEST_INCORRECT_KEY
    zombieUnitByArmorFemale:
      STR_DUMMY_ITEM: STR_DUMMY_UNIT1
  - type: STR_ITEM_ZOMBIE_UNIT_BY_ARMOR_FEMALE_TEST_INCORRECT_VALUE
    zombieUnitByArmorFemale:
      STR_DUMMY_ARMOR: STR_DUMMY_ITEM

  - type: STR_ITEM_ZOMBIE_UNIT_BY_ARMOR_MALE_TEST
    zombieUnitByArmorMale:
      STR_DUMMY_ARMOR: STR_DUMMY_UNIT1
  # missing type
  - type: STR_ITEM_ZOMBIE_UNIT_BY_ARMOR_MALE_TEST_MISSING_KEY
    zombieUnitByArmorMale:
      STR_DUMMY_NON_EXISTING_REFERENCE: STR_DUMMY_UNIT1
  - type: STR_ITEM_ZOMBIE_UNIT_BY_ARMOR_MALE_TEST_MISSING_VALUE
    zombieUnitByArmorMale:
      STR_DUMMY_ARMOR: STR_DUMMY_NON_EXISTING_REFERENCE
  # incorrect type
  - type: STR_ITEM_ZOMBIE_UNIT_BY_ARMOR_MALE_TEST_INCORRECT_KEY
    zombieUnitByArmorMale:
      STR_DUMMY_ITEM: STR_DUMMY_UNIT1
  - type: STR_ITEM_ZOMBIE_UNIT_BY_ARMOR_MALE_TEST_INCORRECT_VALUE
    zombieUnitByArmorMale:
      STR_DUMMY_ARMOR: STR_DUMMY_ITEM

  - type: STR_ITEM_ZOMBIE_UNIT_BY_TYPE_UNIT_TEST
    zombieUnitByType:
      STR_DUMMY_UNIT_TEST1: STR_DUMMY_UNIT2
  - type: STR_ITEM_ZOMBIE_UNIT_BY_TYPE_SOLDIER_TEST
    zombieUnitByType:
      STR_DUMMY_SOLDIER: STR_DUMMY_UNIT2
  # missing type
  - type: STR_ITEM_ZOMBIE_UNIT_BY_TYPE_TEST_MISSING_KEY
    zombieUnitByType:
      STR_DUMMY_NON_EXISTING_REFERENCE: STR_DUMMY_UNIT2
  - type: STR_ITEM_ZOMBIE_UNIT_BY_TYPE_TEST_MISSING_VALUE
    zombieUnitByType:
      STR_DUMMY_UNIT_TEST1: STR_DUMMY_NON_EXISTING_REFERENCE
  # incorrect type
  - type: STR_ITEM_ZOMBIE_UNIT_BY_TYPE_TEST_INCORRECT_KEY
    zombieUnitByType:
      STR_DUMMY_ITEM: STR_DUMMY_UNIT2
  - type: STR_ITEM_ZOMBIE_UNIT_BY_TYPE_TEST_INCORRECT_VALUE
    zombieUnitByType:
      STR_DUMMY_UNIT_TEST1: STR_DUMMY_ITEM

extended:
  tags:
    RuleItem:
      TAG_TEST: int
