{
    "name": "oxc-yaml-helper",
    "displayName": "OpenXcom Ruleset Linker",
    "description": "This extension aims to turn Visual Studio code into an OpenXcom ruleset modding IDE. It links rulesets so you can easily navigate between linked rules. It checks for problems in the rulesets, and a lot of other things.",
    "version": "0.9.0-alpha21-csv-editor-with-translation-checker",
    "author": {
        "name": "pedroterzero"
    },
    "publisher": "pedroterzero",
    "icon": "docs/icon.jpg",
    "repository": {
        "type": "git",
        "url": "https://github.com/pedroterzero/oxce-yaml-helper.git"
    },
    "engines": {
        "vscode": "^1.51.0"
    },
    "categories": [
        "Other"
    ],
    "activationEvents": [
        "workspaceContains:**/*.rul"
    ],
    "main": "./out/extension",
    "contributes": {
        "commands": [
            {
                "command": "oxcYamlHelper.autoOrderWeapons",
                "title": "OpenXcom IDE - Auto order weapons"
            },
            {
                "command": "oxcYamlHelper.convertCsv",
                "title": "OpenXcom IDE - Edit as csv"
            },
            {
                "command": "oxcYamlHelper.convertCsvToRul",
                "title": "OpenXcom IDE - Import to rul"
            }
        ],
        "menus": {
            "commandPalette": [
                {
                    "command": "oxcYamlHelper.autoOrderWeapons",
                    "when": "resourceExtname == .rul"
                },
                {
                    "command": "oxcYamlHelper.convertCsv",
                    "when": "resourceExtname == .rul"
                },
                {
                    "command": "oxcYamlHelper.convertCsvToRul",
                    "when": "resourceExtname == .csv"
                }
            ],
            "explorer/context": [
                {
                    "command": "oxcYamlHelper.convertCsv",
                    "when": "resourceExtname == .rul"
                },
                {
                    "command": "oxcYamlHelper.convertCsvToRul",
                    "when": "resourceExtname == .csv"
                }
            ]
        },
        "configuration": {
            "type": "object",
            "title": "OpenXcom Ruleset Linker",
            "properties": {
                "oxcYamlHelper.ruleFilesPattern": {
                    "type": "string",
                    "default": "**/*.rul",
                    "description": "Rules files location (i.e. Rulesets/**/*.rul)"
                },
                "oxcYamlHelper.translationLocale": {
                    "type": "string",
                    "default": "en-US",
                    "description": "Locale to use when showing translations on hovering. This is also used to check for missing translations, if enabled."
                },
                "oxcYamlHelper.cacheStrategy": {
                    "type": "string",
                    "enum": [
                        "all",
                        "only cache languages",
                        "only cache languages, assets",
                        "only cache assets",
                        "nothing"
                    ],
                    "default": "all"
                },
                "oxcYamlHelper.showDocumentationHover": {
                    "type": "string",
                    "enum": [
                        "yes",
                        "short",
                        "no"
                    ],
                    "default": "yes",
                    "description": "Show documentation for properties on hover. It can be disabled if you find it annoying. By default it shows the full documentation entry, `short` only shows the first line"
                },
                "oxcYamlHelper.validateCategories": {
                    "type": "string",
                    "enum": [
                        "yes",
                        "no",
                        "always"
                    ],
                    "default": "yes",
                    "markdownDescription": "Performs checks on categories. These seem to be undefined a lot of the time, so the check can be turned off here."
                },
                "oxcYamlHelper.findMissingTranslations": {
                    "type": "boolean",
                    "default": "true",
                    "markdownDescription": "Finds missing translations. The locale used is the one set in `oxcYamlHelper.translationLocale`."
                },
                "oxcYamlHelper.findDuplicateDefinitions": {
                    "type": "boolean",
                    "default": "false",
                    "markdownDescription": "Finds duplicate definitions. For example if a research called `STR_MEDI_KIT` is defined twice, it will tell you. Disabled by default for now."
                },
                "oxcYamlHelper.prompts.noRecommendImagePreview": {
                    "type": "boolean",
                    "default": false,
                    "description": "Stop prompting for Image Preview extension"
                },
                "oxcYamlHelper.prompts.noRecommendOpenXcomFtaRulesetTools": {
                    "type": "boolean",
                    "default": false,
                    "description": "Stop prompting for OpenXCOM FtA Ruleset Tools extension"
                },
                "oxcYamlHelper.prompts.noRecommendOpenXcomRulesetTools": {
                    "type": "boolean",
                    "default": false,
                    "description": "Stop prompting for OpenXCOM Ruleset Tools extension"
                }
            }
        },
        "languages": [
            {
                "id": "yaml",
                "extensions": [
                    ".rul",
                    ".nam",
                    ".sav",
                    ".asav"
                ]
            },
            {
                "id": "y-script",
                "extensions": [
                    ".ys"
                ]
            }
        ],
        "grammars": [
            {
                "path": "./syntaxes/injection.json",
                "scopeName": "y-scripts.injection",
                "injectTo": [
                    "source.yaml"
                ],
                "embeddedLanguages": {
                    "meta.embedded.inline.y-script": "y-script"
                }
            },
            {
                "language": "y-script",
                "scopeName": "source.y-script",
                "path": "./syntaxes/y-script.tmGrammar.json"
            }
        ]
    },
    "scripts": {
        "vscode:prepublish": "npm run build",
        "build": "npm run compile && cp -a src/assets/xcom1 out/assets/xcom1",
        "clean": "rm -rf out/*",
        "compile": "npm run clean && tsc -p ./",
        "watch": "tsc -watch -p ./",
        "postinstall": "echo node ./node_modules/vscode/bin/install",
        "test": "npm run compile && node ./out/test/runTest.js",
        "test:prepare": "node ./out/test/prepare.js",
        "test:cleanup": "mv package.json.orig package.json"
    },
    "devDependencies": {
        "@types/dot-object": "^2.1.2",
        "@types/flat-cache": "^2.0.0",
        "@types/fs-extra": "^9.0.13",
        "@types/glob": "^7.2.0",
        "@types/mocha": "^9.1.0",
        "@types/node": "^14.18.9",
        "@types/papaparse": "^5.2.6",
        "@types/vscode": "^1.51.0",
        "@typescript-eslint/eslint-plugin": "^5.10.0",
        "@typescript-eslint/parser": "^5.10.0",
        "eslint": "^8.7.0",
        "fs-extra": "^10.0.0",
        "mocha": "^9.2.0",
        "nyc": "^15.1.0",
        "typescript": "^4.5.5",
        "vscode-test": "^1.5.2"
    },
    "dependencies": {
        "dot-object": "^2.1.4",
        "dot-prop": "^6.0.1",
        "flat-cache": "^3.0.4",
        "merge-anything": "^4.0.2",
        "yaml": "^1.10.2",
        "papaparse": "^5.3.0",
        "tiny-clean-object": "^1.1.0"
    }
}
